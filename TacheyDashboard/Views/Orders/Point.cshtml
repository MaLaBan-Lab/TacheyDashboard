
@{
    ViewData["Title"] = "積分管理";

}

<div class="" id="app">

    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item w-50 text-center" role="presentation">
            <a class="nav-link active fs-4 fw-bold" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">
                <i class="far fa-clipboard"></i>
                未發送積分
            </a>
        </li>
        <li class="nav-item w-50 text-center" role="presentation">
            <a class="nav-link fs-4 fw-bold" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">
                <i class="fas fa-clipboard-check"></i>
                已發送積分
            </a>
        </li>
    </ul>

    <div class="tab-content" id="myTabContent">
        <div class="tab-pane bg-white fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
            <b-button variant="success" class="mt-3 ml-3" v-b-modal.modal-1><i class="far fa-plus-square mr-2"></i>新增積分券</b-button>
            <template>
                <div>
                    <b-table :items="unsendPoints" :busy="isBusy" :fields="fields" class="mt-3" hover :head-variant="headVariant" :fixed="fixed">
                        <template #table-busy>
                            <div class="text-center text-danger my-2">
                                <b-spinner class="align-middle"></b-spinner>
                                <strong>Loading...</strong>
                            </div>
                        </template>
                        <template #cell(status)="row">
                            <b-button v-on:click="info(row.item, row.index, $event.target)" class="mr-1">
                                未發送
                            </b-button>
                        </template>
                    </b-table>
                </div>
            </template>
        </div>
        <div class="tab-pane bg-white fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
            <template>
                <div>
                    <b-table :items="sendPoints" :busy="isBusy" :fields="fields" class="mt-3" hover :head-variant="headVariant" :fixed="fixed">
                        <template #table-busy>
                            <div class="text-center text-danger my-2">
                                <b-spinner class="align-middle"></b-spinner>
                                <strong>Loading...</strong>
                            </div>
                        </template>
                    </b-table>
                </div>
            </template>
        </div>
    </div>

    <b-modal id="modal-1" title="新增積分券">

        <b-form-group id="input-group-1" label="積分類別:" label-for="input-1">
            <b-form-select v-model="PointForm.pointName" :options="options"></b-form-select>
        </b-form-group>

        <b-form-group id="input-group-2" label="積分點數:" label-for="input-2">
            <b-form-input id="input-2"
                          v-model="PointForm.pointNum"
                          placeholder="輸入點數"
                          required
                          :type="type"></b-form-input>
        </b-form-group>

        <b-form-group id="input-group-3" label="積分期限:" label-for="input-3">
            <b-form-input id="input-3"
                          v-model="PointForm.validDate"
                          placeholder="輸入期限"
                          required
                          :type="type"></b-form-input>
        </b-form-group>

        <template #modal-footer="{ ok, cancel }">
            <b-button variant="danger" v-on:click="cancel()">
                取消
            </b-button>
            <b-button variant="success" v-on:click="ok();postPoint()">
                新增
            </b-button>
        </template>
    </b-modal>

    <b-modal :id="infoModal.id" :title="infoModal.title" v-on:hide="resetInfoModal">
        <pre class="fs-3">{{ infoModal.content }}</pre>
        <template #modal-footer="{ ok, cancel }">
            <b-button variant="danger" v-on:click="cancel()">
                取消
            </b-button>
            <b-button variant="success" v-on:click="ok();sendPoint(infoModal.pointId)">
                確認
            </b-button>
        </template>
    </b-modal>

</div>

@section endJS{
    <script>
        let app = new Vue({
            el: '#app',
            data() {
                return {
                    isBusy: false,
                    headVariant: 'dark',
                    fixed: true,
                    sendPoints: [],
                    unsendPoints: [],
                    fields: [
                        { key: 'pointId', label: '積分編號', sortable: true },
                        { key: 'pointName', label: '積分名稱', sortable: true },
                        { key: 'pointNum', label: '點數', sortable: true },
                        { key: 'validDate', label: '有效天數', sortable: true },
                        { key: 'status', label: '發送狀態' }
                    ],
                    type:'number',
                    PointForm: {
                        pointName: '',
                        pointNum: 0,
                        validDate:0
                    },
                    infoModal: {
                        id: 'info-modal',
                        title: '',
                        content: '',
                        pointId: null
                    },
                    options: [
                        { value: '每日登入', text: '每日登入' },
                        { value: '節日放送', text: '節日放送' }
                    ]
                }
            },
            mounted() {
                axios.get('https://localhost:44363/api/Point')
                    .then((res) => {
                        this.isBusy = !this.isBusy
                        res.data.result.forEach((item) => {
                            if (!item.status) {
                                this.unsendPoints.push({
                                    'pointId': item.pointId,
                                    'pointName': item.pointName,
                                    'pointNum': item.pointNum,
                                    'validDate': item.validDate,
                                    'status': (item.status) ? '已發送' : '未發送'
                                })
                            } else {
                                this.sendPoints.push({
                                    'pointId': item.pointId,
                                    'pointName': item.pointName,
                                    'pointNum': item.pointNum,
                                    'validDate': item.validDate,
                                    'status': (item.status) ? '已發送' : '未發送'
                                })
                            }
                            
                        })
                        this.isBusy = !this.isBusy
                    })
            },
            methods: {
                toggleBusy() {
                    this.isBusy = !this.isBusy
                },
                info(item, index, button) {
                    this.infoModal.title = `${item.pointId}號-積分券`
                    this.infoModal.content = `確定發送${item.pointId}號積分券?`
                    this.$root.$emit('bv::show::modal', this.infoModal.id, button)
                    this.infoModal.pointId = item.pointId
                },
                resetInfoModal() {
                    this.infoModal.title = ''
                    this.infoModal.content = ''
                },
                sendPoint(id) {
                    console.log(id)
                },
                postPoint() {
                    console.log(this.PointForm)
                    axios.post('https://localhost:44363/api/Point', {
                        pointName: this.PointForm.pointName,
                        pointNum: parseInt(this.PointForm.pointNum),
                        validDate: parseInt(this.PointForm.validDate)
                    }).then((res) => {
                        this.unsendPoints.push({
                            'pointId': res.data.result.pointId,
                            'pointName': res.data.result.pointName,
                            'pointNum': res.data.result.pointNum,
                            'validDate': res.data.result.validDate,
                            'status': (res.data.result.status) ? '已發送' : '未發送'
                        })
                        this.PointForm = {
                            pointName: '',
                            pointNum: 0,
                            validDate: 0
                        }
                    })
                }
            }
        })
    </script>
}

@*<script>
        let app = new Vue({
            el: '#app',
            data: {
                items: @Html.Raw(ViewBag.jsonString),
                fields: [
                    { key: 'PointId', label: 'PointId', sortable: true, sortDirection: 'desc' },
                    { key: 'MemberId', label: 'MemberId', sortable: true, sortDirection: 'desc' },
                    { key: 'PointName', label: 'PointName', sortable: true, sortDirection: 'desc'},
                    { key: 'PointNum', label: 'PointNum', sortable: true, sortDirection: 'desc'},
                    { key: 'GetTime', label: 'GetTime', sortable: true, sortDirection: 'desc'},
                    { key: 'Deadline', label: 'Deadline', sortable: true, sortDirection: 'desc' },
                    { key: 'Status', label: 'Status', sortable: true, sortDirection: 'desc' }
                ],
                totalRows: 1,
                currentPage: 1,
                perPage: 5,
                pageOptions: [5, 10, 15, { value: 100, text: "Show a lot" }],
                sortBy: '',
                sortDesc: false,
                sortDirection: 'asc',
                filter: null,
                filterOn: [],
                infoModal: {
                    id: 'info-modal',
                    title: '',
                    content: ''
                }
            },
            computed: {
                sortOptions() {
                    // Create an options list from our fields
                    return this.fields
                        .filter(f => f.sortable)
                        .map(f => {
                            return { text: f.label, value: f.key }
                        })
                }
            },
            mounted() {
                // Set the initial number of items
                this.totalRows = this.items.length
            },
            methods: {
                info(item, index, button) {
                    this.infoModal.title = `Row index: ${index}`
                    this.infoModal.content = JSON.stringify(item, null, 2)
                    this.$root.$emit('bv::show::modal', this.infoModal.id, button)
                },
                resetInfoModal() {
                    this.infoModal.title = ''
                    this.infoModal.content = ''
                },
                onFiltered(filteredItems) {
                    // Trigger pagination to update the number of buttons/pages due to filtering
                    this.totalRows = filteredItems.length
                    this.currentPage = 1
                }
            }
        });

    </script>*@
