
@{
    ViewData["Title"] = "test";

}

<h1>折扣卷管理頁面</h1>
<div id="app">
    <b-container fluid>
        <!-- User Interface controls -->
        <b-row>
            <b-col lg="6" class="my-1">
                <b-form-group label="Filter"
                              label-for="filter-input"
                              label-cols-sm="1"
                              @*label-align-sm="right"*@
                              label-size="sm"
                              class="mb-0 ">
                    <b-input-group size="sm">
                        <b-form-input id="filter-input"
                                      v-model="filter"
                                      type="search"
                                      placeholder="Type to Search"></b-form-input>

                        <b-input-group-append>
                            <b-button :disabled="!filter" v-on:click="filter = ''">Clear</b-button>
                        </b-input-group-append>
                    </b-input-group>
                </b-form-group>
            </b-col>

            <b-col sm="5" md="6" class="my-1">
                <b-form-group label="Per page" label-for="per-page-select" label-cols-sm="6" label-cols-md="4"
                              label-cols-lg="3" label-align-sm="right" label-size="sm" class="mb-0">
                    <b-form-select id="per-page-select" v-model="perPage" :options="pageOptions" size="sm">
                    </b-form-select>
                </b-form-group>
            </b-col>



        </b-row>

        <!-- Main table element -->
        <b-table :items="items" :fields="fields" :current-page="currentPage" :per-page="perPage" :filter="filter"
                 :filter-included-fields="filterOn" :sort-by.sync="sortBy" :sort-desc.sync="sortDesc"
                 :sort-direction="sortDirection" stacked="md" show-empty small v-on:filtered="onFiltered">


            <template #cell(actions)="row">
                <b-button size="sm" v-on:click="info(row.item, row.index, $event.target)" class="mr-1">
                    Info modal
                </b-button>
                <b-button size="sm" v-on:click="row.toggleDetails">
                    {{ row.detailsShowing ? 'Hide' : 'Show' }} Details
                </b-button>
            </template>

            <template #row-details="row">
                <b-card>
                    <ul>
                        <li v-for="(value, key) in row.item" :key="key">{{ key }}: {{ value }}</li>
                    </ul>
                </b-card>
            </template>
        </b-table>

        <!-- Info modal -->
        <b-modal :id="infoModal.id" :title="infoModal.title" ok-only v-on:hide="resetInfoModal">
            <pre>{{ infoModal.content }}</pre>
        </b-modal>
        <div class="row justify-content-between">
            <b-col sm="7" md="6" class="my-1">
                <b-pagination v-model="currentPage" :total-rows="totalRows" :per-page="perPage" align="fill"
                              size="sm" class="my-0"></b-pagination>
            </b-col>
            <button class="col-md-1 col-sm-7 btn btn-primary me-md-2" v-on:click="sendValue">
                發送折扣卷
            </button>
        </div>

    </b-container>
</div>
 

@section endJS{
    <script>

        var takevalue;
        

        let app = new Vue({
            el: '#app',
            data: {
                items: @Html.Raw(ViewBag.jsonString),
                fields: [
                    { key: 'TicketId', label: 'TicketId', sortable: true, sortDirection: 'desc' },
                    { key: 'TicketName', label: 'TicketName', sortable: true, sortDirection: 'desc' },
                    { key: 'TicketStatus', label: 'TicketStatus', sortable: true, sortDirection: 'desc'},
                    { key: 'Ticketdate', label: 'Ticketdate', sortable: true, sortDirection: 'desc'},
                    { key: 'PayMethod', label: 'PayMethod', sortable: true, sortDirection: 'desc'},
                    { key: 'ProductType', label: 'ProductType', sortable: true, sortDirection: 'desc' },
                    { key: 'UseTime', label: 'UseTime', sortable: true, sortDirection: 'desc' }
                ],
                totalRows: 1,
                currentPage: 1,
                perPage: 5,
                pageOptions: [5, 10, 15, { value: 100, text: "Show a lot" }],
                sortBy: '',
                sortDesc: false,
                sortDirection: 'asc',
                filter: null,
                filterOn: [],
                infoModal: {
                    id: 'info-modal',
                    title: '',
                    content: ''
                }
            },
            watch: {
                items: function () {
                    alert("測試")
                }
            },
            computed: {
                sortOptions() {
                    // Create an options list from our fields
                    return this.fields
                        .filter(f => f.sortable)
                        .map(f => {
                            return { text: f.label, value: f.key }
                        })
                }
            },
            mounted() {
                // Set the initial number of items
                this.totalRows = this.items.length
            },
            methods: {
                info(item, index, button) {
                    this.infoModal.title = `Row index: ${index}`
                    this.infoModal.content = JSON.stringify(item, null, 2)
                    this.$root.$emit('bv::show::modal', this.infoModal.id, button)
                },
                resetInfoModal() {
                    this.infoModal.title = ''
                    this.infoModal.content = ''
                },
                onFiltered(filteredItems) {
                    // Trigger pagination to update the number of buttons/pages due to filtering
                    this.totalRows = filteredItems.length
                    this.currentPage = 1
                },
                sendValue() {
                    if (takevalue != null) {
                        $.ajax({
                            url: 'https://localhost:44363/orders/SendInvite?ticketid=' + takevalue,
                            type: "POST",
                            success: function () {

                            }

                        })
                        alert("折價卷已發送");
                    }
                    else {
                        alert("尚未選取折扣卷")
                    }
                    
                    
                }
            }
        });

        var btns_1 = document.querySelectorAll('tbody>tr');
        btns_1.forEach((item, index) => {
            item.addEventListener('click', function (e) {
                btns_1.forEach(Object => Object.setAttribute('style', ''))
                //把每一個btn1的style清空
                var _btn = e.path[0].closest('tr')
                _btn.setAttribute('style', 'outline:1px solid red')
                console.log(_btn.querySelector("td>div").innerText)
                _btn.setAttribute('value', _btn.querySelector("td>div").innerText)
                takevalue = item.getAttribute("value");
            })
        })
        var sort = document.querySelectorAll('thead>tr>th');
        sort.forEach((item, index) => {
            item.addEventListener('click', function (e) {
                takevalue = null;
                btns_1.forEach((item, index) => {
                    btns_1.forEach(Object => Object.setAttribute('style', ''))
                        //把每一個btn1的style清空
                    console.log("測試")
                    item.setAttribute('value', item.querySelector("td>div").innerText)                   
                })
               
            })
        })
       
       
    </script>
}
