
@{
    ViewData["Title"] = "折扣券管理";

}


<div id="app">
    <h2><b-badge variant="secondary">折扣券管理</b-badge></h2>
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item w-50 text-center" role="presentation">
            <a class="nav-link active fs-4 fw-bold" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">
                <i class="far fa-clipboard"></i>
                未發送折扣券
            </a>
        </li>
        <li class="nav-item w-50 text-center" role="presentation">
            <a class="nav-link fs-4 fw-bold" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">
                <i class="fas fa-clipboard-check"></i>
                已發送折扣券
            </a>
        </li>
    </ul>

    <div class="tab-content" id="myTabContent">
        <div class="tab-pane bg-white fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
            <b-button variant="success" class="mt-3 ml-3" v-b-modal.modal-1><i class="far fa-plus-square mr-2"></i>新增折扣券</b-button>
            <template>
                <div>
                    <b-table :items="unsendTickets" :busy="isBusy" :fields="fields" class="mt-3" hover :head-variant="headVariant" :fixed="fixed">
                        <template #table-busy>
                            <div class="text-center text-danger my-2">
                                <b-spinner class="align-middle"></b-spinner>
                                <strong>Loading...</strong>
                            </div>
                        </template>
                        <template #cell(Send)="row">
                            <b-button v-on:click="info(row.item, row.index, $event.target)" class="mr-1">
                                未發送
                            </b-button>
                        </template>
                    </b-table>
                </div>
            </template>
        </div>
        <div class="tab-pane bg-white fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
            <template>
                <div>
                    <b-table :items="sendTickets" :busy="isBusy" :fields="fields" class="mt-3" hover :head-variant="headVariant" :fixed="fixed">
                        <template #table-busy>
                            <div class="text-center text-danger my-2">
                                <b-spinner class="align-middle"></b-spinner>
                                <strong>Loading...</strong>
                            </div>
                        </template>
                    </b-table>
                </div>
            </template>
        </div>
    </div>

    <b-modal id="modal-1" title="新增折扣卷">

        <b-form-group id="input-group-1" label="TicketName:" label-for="input-1">
            <b-form-input v-model="TicketForm.ticketName" type="text" placeholder="輸入折扣卷名子"></b-form-input>
        </b-form-group>

        <b-form-group id="input-group-2" label="Discount:" label-for="input-2">
            <b-form-input id="input-2"
                          v-model="TicketForm.ticketDiscount"
                          placeholder="輸入折扣"
                          required
                          type="text"></b-form-input>
        </b-form-group>
        <b-form-group id="input-group-2" label="PayMethod:" label-for="input-3">
            <b-form-input id="input-3"
                          v-model="TicketForm.PayMethod"
                          placeholder="輸入付款方式"
                          required
                          type="text"></b-form-input>
        </b-form-group>
        <b-form-group id="input-group-2" label="ProductType:" label-for="input-4">
            <b-form-input id="input-4"
                          v-model="TicketForm.ProductType"
                          placeholder="輸入可使用課程類別"
                          required
                          type="text"></b-form-input>
        </b-form-group>
        <b-form-group id="input-group-2" label="UseTime:" label-for="input-5">
            <b-form-input id="input-5"
                          v-model="TicketForm.UseTime"
                          placeholder="輸入可使用次數"
                          required
                          type="text"></b-form-input>
        </b-form-group>

        <b-form-group id="input-group-3" label="TicketDate:" label-for="input-6">
            <b-form-input id="input-6"
                          v-model="TicketForm.ticketDate"
                          placeholder="輸入期限"
                          required
                          type="date"></b-form-input>
        </b-form-group>

        <template #modal-footer="{ ok, cancel }">
            <b-button variant="danger" v-on:click="cancel()">
                取消
            </b-button>
            <b-button variant="success" v-on:click="ok();postPoint()">
                新增
            </b-button>
        </template>
    </b-modal>




    <!-- Main table element -->
    <b-modal :id="infoModal.id" :title="infoModal.title" v-on:hide="resetInfoModal">
        <pre class="fs-3">{{ infoModal.content }}</pre>
        <template #modal-footer="{ ok, cancel }">
            <b-button variant="danger" v-on:click="cancel()">
                取消
            </b-button>
            <b-button variant="success" v-on:click="ok()">
                確認
            </b-button>
        </template>
    </b-modal>

    @*</b-container>*@
</div>






@section endJS{
    <script>

        var takevalue;


        let app = new Vue({
            el: '#app',
            data: {
                isBusy: false,
                headVariant: 'dark',
                fixed: true,
                items: [],
                fields: [
                    { key: 'TicketId', label: 'TicketId', sortable: true, sortDirection: 'desc' },
                    { key: 'TicketName', label: 'TicketName', sortable: true, sortDirection: 'desc' },
                    //{ key: 'TicketStatus', label: 'TicketStatus', sortable: true, sortDirection: 'desc'},
                    { key: 'Ticketdate', label: 'Ticketdate', sortable: true, sortDirection: 'desc' },
                    { key: 'PayMethod', label: 'PayMethod', sortable: true, sortDirection: 'desc' },
                    { key: 'ProductType', label: 'ProductType', sortable: true, sortDirection: 'desc' },
                    { key: 'UseTime', label: 'UseTime', sortable: true, sortDirection: 'desc' },
                    { key: 'Send', label: 'Send', sortable: false, sortDirection: 'desc' },
                ],
                TicketForm: {
                    ticketID: "Ticket" + Math.floor(Math.random() * 1000),
                    ticketName: "",
                    ticketStatus: "可使用",
                    ticketDiscount: "",
                    ticketDate: new Date(),
                    PayMethod: "",
                    ProductType: "",
                    UseTime: "",
                    Send: false
                },
                //sendTickets: [],
                //unsendTickets: [],
                type: 'number',
                totalRows: 1,
                currentPage: 1,
                perPage: 5,
                pageOptions: [5, 10, 15, { value: 100, text: "Show a lot" }],
                sortBy: '',
                sortDesc: false,
                sortDirection: 'asc',
                filter: null,
                filterOn: [],
                infoModal: {
                    id: 'info-modal',
                    title: '',
                    content: ''
                }
            },
            watch: {
                //items: function () {
                //    alert("測試")
                //}
            },
            computed: {
                sortOptions() {
                    // Create an options list from our fields
                    return this.fields
                        .filter(f => f.sortable)
                        .map(f => {
                            return { text: f.label, value: f.key }
                        })
                },
                unsendTickets() {
                    return this.items.filter(x => x.Send == 'false');
                },
                sendTickets() {
                    return this.items.filter(x => x.Send == 'true');
                }
            },
            mounted() {
                this.getData();
               
            },
            methods: {
                makeToast(variant = null) {
                    this.$bvToast.toast('Toast body content', {
                        title: `Variant ${variant || 'default'}`,
                        variant: variant,
                        solid: true
                    })
                },
                info(item, index, button) {
                    this.infoModal.title = `${item.TicketId}號-折扣券`
                    this.infoModal.content = `確定發送${item.TicketId}號折扣券?`
                    this.$root.$emit('bv::show::modal', this.infoModal.id, button)
                },
                resetInfoModal() {
                    this.infoModal.title = ''
                    this.infoModal.content = ''
                },
                onFiltered(filteredItems) {
                    // Trigger pagination to update the number of buttons/pages due to filtering
                    this.totalRows = filteredItems.length
                    this.currentPage = 1
                },
                sendValue() {
                    if (takevalue != null) {
                        $.ajax({
                            url: 'https://localhost:44363/orders/SendInvite?ticketid=' + takevalue,
                            type: "POST",
                            success: function () {

                            }

                        })
                        alert("折價卷已發送");
                    }
                    else {
                        alert("尚未選取折扣卷")
                    }


                },
                getData() {
                    var that = this
                    $.ajax({
                        url: 'https://localhost:44363/orders/Ticketdata',
                        type: "GET",
                        //async: false,
                        success: function (returnData) {
                            that.items = JSON.parse(returnData)
                            //console.warn(that.unsendTickets)
                        }

                    })
                },
                postPoint() {
                  
                    console.log(this.TicketForm)
                    axios.post('https://localhost:44363/Orders/Create', {
                        TicketId: this.TicketForm.ticketID,
                        TicketName: this.TicketForm.ticketName,
                        TicketStatus: this.TicketForm.ticketStatus,
                        Discount: parseFloat(this.TicketForm.ticketDiscount),
                        Ticketdate: new Date(this.TicketForm.ticketDate),
                        PayMethod: this.TicketForm.PayMethod,
                        ProductType: this.TicketForm.ProductType,
                        UseTime: this.TicketForm.UseTime,
                        Send: "false"
                    }).then((res) => {
                        app.getData()
                    }).finally(() => {
                        //app.sort(app.items)
                    })
                  
                    
                }
               
            }
        });



    </script>
}
